exports.id=177,exports.ids=[177],exports.modules={2384:(e,t,i)=>{i.r(t),i.d(t,{HomeWebviewProvider:()=>HomeWebviewProvider});var s=i(9496),o=i(8388),n=i(4209),a=i(6631),r=i(9529),h=i(5148),d=i(9796),c=i(5798),l=(e=>(e.DismissedWelcome="dismissed:welcome",e.OpenedSCM="opened:scm",e))(l||{});const g=new c.ke("home/step/complete"),u=new c.ke("home/section/dismiss"),m=new c.ke("home/status/dismiss"),p=new c.ke("home/banner/dismiss"),b=new c.jH("subscription/didChange"),w=new c.jH("extensionEnabled/didChange"),y=new c.jH("configuration/didChange"),S=new c.jH("layout/didChange");class HomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._validateSubscriptionDebounced=void 0,this._disposable=s.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),(0,a.ve)((e=>{"gitlens:disabled"===e&&this.notifyExtensionEnabled()})),h.D.onDidChange(this.onConfigurationChanged,this),this.container.storage.onDidChange(this.onStorageChanged,this))}dispose(){this._disposable.dispose()}onConfigurationChanged(e){h.D.changed(e,"plusFeatures.enabled")&&this.notifyDidChangeConfiguration()}onStorageChanged(e){"views:layout"===e.key&&this.notifyDidChangeLayout()}async onSubscriptionChanged(e){await this.container.storage.store("home:status:pinned",!0),this.notifyDidChangeData(e.current)}onVisibilityChanged(e){e?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}onWindowFocusChanged(e){e&&this.host.visible?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}registerCommands(){return[(0,r.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this),(0,r.xR)("gitlens.home.toggleWelcome",(async()=>{const e=!this.welcomeVisible;await this.container.storage.store("views:welcome:visible",e),e&&await Promise.allSettled([this.container.storage.store("home:actions:completed",[]),this.container.storage.store("home:steps:completed",[]),this.container.storage.store("home:sections:dismissed",[])]),this.host.refresh()})),(0,r.xR)("gitlens.home.restoreWelcome",(async()=>{await Promise.allSettled([this.container.storage.store("home:steps:completed",[]),this.container.storage.store("home:sections:dismissed",[])]),this.host.refresh()})),(0,r.xR)("gitlens.home.showSCM",(async()=>{const e=this.container.storage.get("home:actions:completed",[]);e.includes(l.OpenedSCM)||(e.push(l.OpenedSCM),await this.container.storage.store("home:actions:completed",e),this.notifyDidChangeData()),await(0,r.dO)("workbench.view.scm")}))]}onMessageReceived(e){switch(e.method){case g.method:(0,c.mq)(g,e,(e=>this.completeStep(e)));break;case u.method:(0,c.mq)(u,e,(e=>this.dismissSection(e)));break;case m.method:(0,c.mq)(m,e,(e=>this.dismissPinStatus()));break;case p.method:(0,c.mq)(p,e,(e=>this.dismissBanner(e)))}}completeStep({id:e,completed:t=!1}){const i=this.container.storage.get("home:steps:completed",[]),s=i.includes(e);!s&&t?i.push(e):s&&!t&&i.splice(i.indexOf(e),1),this.container.storage.store("home:steps:completed",i)}dismissSection(e){const t=this.container.storage.get("home:sections:dismissed",[]);t.includes(e.id)||(t.push(e.id),this.container.storage.store("home:sections:dismissed",t))}dismissBanner(e){const t=this.container.storage.get("home:banners:dismissed",[]);t.includes(e.id)||t.push(e.id),this.container.storage.store("home:banners:dismissed",t)}dismissPinStatus(){this.container.storage.store("home:status:pinned",!1)}includeBootstrap(){return this.getState()}get welcomeVisible(){return this.container.storage.get("views:welcome:visible",!0)}async getRepoVisibility(){return await this.container.git.visibility()}async getSubscription(e){const t=[...this.container.storage.get("home:actions:completed",[])];this.welcomeVisible||t.push(l.DismissedWelcome);const i=e??await this.container.subscription.getSubscription(!0);let s;return s=i.account?.email?(0,o.GV)(i.account.email,34).toString():`${this.host.getWebRoot()??""}/media/gitlens-logo.webp`,{subscription:i,completedActions:t,avatar:s}}getPinStatus(){return this.container.storage.get("home:status:pinned")??!0}async getState(e){const t=await this.getSubscription(e),i=this.container.storage.get("home:steps:completed",[]),s=this.container.storage.get("home:sections:dismissed",[]),o=this.container.storage.get("home:banners:dismissed",[]);return{extensionEnabled:this.getExtensionEnabled(),webroot:this.host.getWebRoot(),subscription:t.subscription,completedActions:t.completedActions,plusEnabled:this.getPlusEnabled(),visibility:await this.getRepoVisibility(),completedSteps:i,dismissedSections:s,avatar:t.avatar,layout:this.getLayout(),pinStatus:this.getPinStatus(),dismissedBanners:o}}notifyDidChangeData(e){return!!this.host.ready&&s.window.withProgress({location:{viewId:this.host.id}},(async()=>{const t=await this.getSubscription(e);return this.host.notify(b,{...t,pinStatus:this.getPinStatus()})}))}getExtensionEnabled(){return!(0,a.fw)("gitlens:disabled",!1)}notifyExtensionEnabled(){this.host.ready&&this.host.notify(w,{extensionEnabled:this.getExtensionEnabled()})}getPlusEnabled(){return h.D.get("plusFeatures.enabled")}notifyDidChangeConfiguration(){this.host.ready&&this.host.notify(y,{plusEnabled:this.getPlusEnabled()})}getLayout(){const e=this.container.storage.get("views:layout");return null!=e?e:n.x.SourceControl}notifyDidChangeLayout(){this.host.ready&&this.host.notify(S,{layout:this.getLayout()})}async validateSubscription(){null==this._validateSubscriptionDebounced&&(this._validateSubscriptionDebounced=(0,d.Ds)(this.validateSubscriptionCore,1e3)),await this._validateSubscriptionDebounced()}async validateSubscriptionCore(){if(null==this._validating){this._validating=this.container.subscription.validate();try{await this._validating}finally{this._validating=void 0}}}}}};